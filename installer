#!/bin/bash
SXCM_PATH=/usr/share/sxcm
SXCM_PROFILES_PATH=$SXCM_PATH/profiles
SXCM_RESOURCES_PATH=$SXCM_PATH/resources
SXCM_DEMOS_PATH=$SXCM_PATH/demo
SXCM_LIB_PATH=$SXCM_PATH/lib
SXCM_COMPLETION_PATH=/etc/bash_completion.d/sxcm
SXCM_BIN_PATH=/usr/bin/sxcm
SXCM_VERSION=9.8.1
SXCM_ARCHIVE_URL=https://github.com/startxfr/sxcm/archive/refs/tags/v$SXCM_VERSION.zip
PKGMNG=dnf
PIPMNG=pip3
SNAPMNG=snap
PKGLIST="curl git atomic-openshift-clients source-to-images bash-completion snapd python3-pip"
SNAPLIST="helm"
PIPLIST="awscli yq jq"

echo -e "\e[1m\e[94mCheck\e[0m Running with privilegied permissions"
if [ `whoami` != 'root' ]
  then
    echo -e "\e[1m\e[31mFATAL\e[0m You must be root to run this installer"
    exit
fi
echo -e "\e[1m\e[94mCheck\e[0m $SXCM_PATH exist"
if [ ! -d $SXCM_PATH ]
  then
    mkdir -p $SXCM_PATH &> /dev/null
    mkdir -p $SXCM_LIB_PATH &> /dev/null
    mkdir -p $SXCM_PROFILES_PATH &> /dev/null
    mkdir -p $SXCM_RESOURCES_PATH &> /dev/null
    mkdir -p $SXCM_DEMOS_PATH &> /dev/null
fi

echo -e "\e[1m\e[94mCheck\e[0m OS release support"
source /etc/os-release
echo -e "\e[1m\e[94mCheck\e[0m Identified as $PRETTY_NAME"
if [[ $ID == "fedora" &&  $VERSION_ID == "35" ]]
then
  PKGLIST="curl git atomic-openshift-clients source-to-images bash-completion snapd python3-pip jq"
  PIPLIST="awscli yq"
  echo -e "\e[1m\e[92mConfig\e[0m Configure specific packages for $PRETTY_NAME"
elif [[ $ID == "fedora" &&  ($VERSION_ID == "34" || $VERSION_ID == "33" || $VERSION_ID == "32" || $VERSION_ID == "31" ) ]]
then
  SNAPLIST="helm"
  echo -e "\e[1m\e[92mConfig\e[0m Configure specific packages for $PRETTY_NAME"
elif [[ $ID == "fedora" &&  $VERSION_ID == "30" ]]
then
  PKGMNG=yum
  PIPMNG=pip
  SNAPMNG=snap
  PKGLIST="curl git atomic-openshift-clients source-to-images bash-completion snapd python3-pip"
  SNAPLIST="helm"
  PIPLIST="awscli yq jq"
  echo -e "\e[1m\e[92mConfig\e[0m Configure specific packages for $PRETTY_NAME"
else 
  echo -e "\e[1m\e[31mFATAL\e[0m Your $PRETTY_NAME distribution must be supported in this installer"
  exit
fi

echo -e "\e[1m\e[93mInstall\e[0m Install \e[1m$PKGMNG\e[0m dependencies ($PKGLIST)"
$PKGMNG update -y $PKGLIST
echo -e "\e[1m\e[93mInstall\e[0m Install \e[1m$SNAPMNG\e[0m dependencies ($SNAPLIST)"
$SNAPMNG refresh $SNAPLIST
echo -e "\e[1m\e[93mInstall\e[0m Install \e[1m$PIPMNG\e[0m dependencies ($PIPLIST)"
$PIPMNG install $PIPLIST --upgrade
cd /tmp/
echo -e "\e[1m\e[93mInstall\e[0m Download $SXCM_ARCHIVE_URL"
curl -O -L  $SXCM_ARCHIVE_URL &> /dev/null
echo -e "\e[1m\e[93mInstall\e[0m Unzip v$SXCM_VERSION.zip archive"
unzip -qq v$SXCM_VERSION.zip
cd - &> /dev/null
echo -e "\e[1m\e[93mInstall\e[0m Install sxcm resources"
cd /tmp/sxcm-$SXCM_VERSION &> /dev/null
echo -e "\e[1m\e[93mInstall\e[0m Create auto-completion in $SXCM_COMPLETION_PATH"
mv src/completion $SXCM_COMPLETION_PATH
echo -e "\e[1m\e[93mInstall\e[0m Create cli binary in $SXCM_BIN_PATH"
mv src/cli $SXCM_BIN_PATH
echo -e "\e[1m\e[93mInstall\e[0m Create libraries in $SXCM_LIB_PATH"
mv src $SXCM_LIB_PATH
cd - &> /dev/null
echo -e "\e[1m\e[93mInstall\e[0m Cleanup tempory files"
rm -rf /tmp/sxcm-$SXCM_VERSION /tmp/v$SXCM_VERSION.zip &> /dev/null
echo -e "\e[1m\e[32mInstall\e[0m SXCM is now installed"
