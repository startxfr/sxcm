kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: sxcm-cluster-infra-project
  annotations:
    openshift.io/display-name: STARTX cluster Infra (admin)
    description: Deploy cluster-wide resources to configure cluster infrastructure according to sxcm definitions
    iconClass: icon-openshift
    tags: startx,cluster,config,admin,infra
    openshift.io/provider-display-name: STARTX
    openshift.io/generated-by: sxcm
    sxcm_console_timeout: "10"
  labels:
    template: sxcm-cluster-infra-project
    app.kubernetes.io/name: "sxcm-cluster-infra-project"
    app.kubernetes.io/managed-by: sxcm
message: |-
  Your cluster configuration is now ready

  Scope             : ${SCOPE}
  Cluster           : ${CLUSTER}
labels:
  template: sxcm-cluster-infra-project
  app.kubernetes.io/managed-by: sxcm
objects:
- kind: Application
  apiVersion: argoproj.io/v1alpha1
  metadata:
    name: startx-cluster-startx-project
    namespace: "${ARGOCD_NS}"
    labels:  &basic_labels
      app.startx.fr/scope: "${SCOPE}"
      app.startx.fr/cluster: "${CLUSTER}"
      app.startx.fr/component: "startx"
      app.kubernetes.io/name: "argoapp-cluster-infra-config-application"
      app.kubernetes.io/part-of: "startx"
      app.kubernetes.io/version: "${VERSION}"
      app.kubernetes.io/component: "startx"
    annotations: &basic_annotations
      openshift.io/generated-by: sxcm
      # argocd.argoproj.io/manifest-generate-paths: .
    finalizers:
      - resources-finalizer.argocd.argoproj.io
  spec:
    destination:
      namespace: "${ARGOCD_NS}"
      server: 'https://kubernetes.default.svc'
    info:
      - name: teammail
        value: dev@startx.fr
    project: cluster-admin
    source:
      path: charts/project/
      repoURL: 'https://github.com/startxfr/helm-repository.git'
      targetRevision: stable
      helm:
        valueFiles:
          - values-startx.yaml
        parameters:
          - name: context.scope
            value: "${SCOPE}"
          - name: context.cluster
            value: "${CLUSTER}"
          - name: context.environment
            value: "${ENV}"
          - name: context.version
            value: "${VERSION}"
          - name: context.app
            value: "startx"
          - name: enabled
            value: "true"
          - name: project.enabled
            value: "true"
          - name: rbac.enabled
            value: "true"
          - name: networkpolicy.enabled
            value: "true"
          - name: limits.enabled
            value: "true"
          - name: quotas.enabled
            value: "true"
          - name: serviceAccounts.enabled
            value: "true"
          - name: dockercfg.enabled
            value: "true"
          - name: dockercfg.list[0].username
            value: "${QUAYIO_LOGIN}"
          - name: dockercfg.list[0].password
            value: "${QUAYIO_PWD}"
          - name: dockercfg.list[0].email
            value: "dev@startx.fr"
          - name: dockercfg.list[1].username
            value: "${DOCKERHUB_LOGIN}"
          - name: dockercfg.list[1].password
            value: "${DOCKERHUB_PWD}"
          - name: dockercfg.list[1].email
            value: "dev@startx.fr"
          - name: dockercfg.list[2].username
            value: "${RHN_USER}"
          - name: dockercfg.list[2].password
            value: "${RHN_PASSWORD}"
          - name: dockercfg.list[2].email
            value: "clarue@startx.fr"
    syncPolicy:
      automated:
        prune: false
        selfHeal: false
      syncOptions:
        - CreateNamespace=false
        - Validate=true
      retry:
        limit: 5
        backoff:
          duration: 5s
          factor: 2
          maxDuration: 5m
    ignoreDifferences:
      - kind: ServiceAccount
        jsonPointers:
        - /imagePullSecrets
        - /secrets
- kind: Application
  apiVersion: argoproj.io/v1alpha1
  metadata:
    name: startx-cluster-argocd-dockercfg
    namespace: "${ARGOCD_NS}"
    labels:
      <<: *basic_labels
      app.kubernetes.io/name: "argoapp-cluster-argocd-dockercfg-application"
    annotations:
      <<: *basic_annotations
      # argocd.argoproj.io/manifest-generate-paths: .
    finalizers:
      - resources-finalizer.argocd.argoproj.io
  spec:
    destination:
      namespace: "${ARGOCD_NS}"
      server: 'https://kubernetes.default.svc'
    info:
      - name: teammail
        value: dev@startx.fr
    project: cluster-admin
    source:
      path: charts/project/
      repoURL: 'https://github.com/startxfr/helm-repository.git'
      targetRevision: devel
      helm:
        valueFiles:
          - values-startx-argocd.yaml
        parameters:
          - name: context.scope
            value: "${SCOPE}"
          - name: context.cluster
            value: "${CLUSTER}"
          - name: context.environment
            value: "${ENV}"
          - name: context.version
            value: "${VERSION}"
          - name: context.app
            value: "${ARGOCD_NS}"
          - name: serviceAccounts.enabled
            value: "true"
          - name: dockercfg.enabled
            value: "true"
          - name: dockercfg.list[0].username
            value: "${QUAYIO_LOGIN}"
          - name: dockercfg.list[0].password
            value: "${QUAYIO_PWD}"
          - name: dockercfg.list[0].email
            value: "dev@startx.fr"
          - name: dockercfg.list[1].username
            value: "${DOCKERHUB_LOGIN}"
          - name: dockercfg.list[1].password
            value: "${DOCKERHUB_PWD}"
          - name: dockercfg.list[1].email
            value: "dev@startx.fr"
    syncPolicy:
      automated:
        prune: false
        selfHeal: false
      syncOptions:
        - CreateNamespace=false
        - Validate=true
      retry:
        limit: 5
        backoff:
          duration: 5s
          factor: 2
          maxDuration: 5m
- kind: Application
  apiVersion: argoproj.io/v1alpha1
  metadata:
    name: startx-cluster-imagestreams
    namespace: "${ARGOCD_NS}"
    labels:
      <<: *basic_labels
      app.kubernetes.io/name: "startx-cluster-imagestreams-application"
    annotations:
      <<: *basic_annotations
    finalizers:
      - resources-finalizer.argocd.argoproj.io
  spec:
    destination:
      namespace: "${NS}"
      server: 'https://kubernetes.default.svc'
    info:
      - name: teammail
        value: dev@startx.fr
    project: cluster-admin
    source:
      path: charts/example-imagestreams/
      repoURL: 'https://github.com/startxfr/helm-repository.git'
      targetRevision: stable
      helm:
        valueFiles:
          - values-startx.yaml
        parameters:
          - name: context.scope
            value: "${SCOPE}"
          - name: context.cluster
            value: "${CLUSTER}"
          - name: context.environment
            value: "${ENV}"
          - name: context.version
            value: "${VERSION}"
          - name: enabled
            value: "true"
    syncPolicy:
      automated:
        prune: false
        selfHeal: false
      syncOptions:
        - CreateNamespace=false
        - Validate=false
    ignoreDifferences:
      - group: image.openshift.io
        kind: ImageStream
        jsonPointers:
          - /spec
parameters:
  - name: ARGOCD_NS
    displayName: The namespace where argocd server goes to
    description: "Namespace to place argocd server to"
    value: startx-argocd
  - name: NS
    displayName: STARTX namespace
    description: "STARTX namespace"
    value: startx
  - name: SCOPE
    displayName: Project scope
    description: "Project scope (ex: sxv4)"
    value: "startx"
  - name: CLUSTER
    displayName: Cluster name
    description: "Name of the current cluster  (ex: sxsf)"
    value: "sxsf"
  - name: ENV
    displayName: Project environment
    description: "Project environment (ex: dev, factory, preprod or prod)"
    value: "dev"
  - name: VERSION
    displayName: Project version
    description: "Project deployed release"
    value: "3.9.x-dev"
  - name: CLUSTER_PROFILE
    displayName: Name of the cluster profile
    description: "The name of the cluster profile"
    value: default
  - name: RHN_USER
    displayName: RHN container access user
    description: Redhat Network access user to the RH container catalog
  - name: RHN_PASSWORD
    displayName: RHN container access password
    description: Redhat Network access password to the Rh container catalog
  - name: DOCKERHUB_LOGIN
    displayName: Login to use for pulling images from the dockerhub registry
    description: "The login to use for pulling images from the dockerhub registry"
    value: myDockerhubLogin
  - name: DOCKERHUB_PWD
    displayName: Password to use for pulling images from the dockerhub registry
    description: "The Password coresponding to the login for pulling images from the dockerhub registry"
    value: myDockerhubPassword
  - name: QUAYIO_LOGIN
    displayName: Login to use for pulling images from the quay.io registry
    description: "The login to use for pulling images from the quay.io registry"
    value: myQuayioLogin
  - name: QUAYIO_PWD
    displayName: Password to use for pulling images from the quay.io registry
    description: "The Password coresponding to the login for pulling images from the quay.ioi registry"