kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: sxv4-helm-app-template
  annotations:
    openshift.io/display-name: Demo STARTX - Helm-chart samples
    openshift.io/documentation-url: https://github.com/startxfr/sxv4/blob/dev/README.md
    openshift.io/support-url: https://github.com/startxfr/sxv4/issues/new
    openshift.io/generated-by: sxcm
    openshift.io/provider-display-name: STARTX
    description:
      Template for deploying ArgoCD samples
    iconClass: icon-nodejs
    tags: startx,nodejs,helm,gitops,sxv4,demo,dev
  labels:
    component: demo
    template: sxv4-helm-app-template
message: |-
  Your helm demo applications will be soon deployed in project ${SCOPE}-helm.
  Monitor the deployement for application availability and
  Follow created route to browse running application

  Scope          : ${SCOPE}
  Environment    : ${ENV}
  Project        : ${NS}

labels:
  template: sxv4-helm-app-template
  app.kubernetes.io/managed-by: sxcm
objects:
  - kind: Application
    apiVersion: argoproj.io/v1alpha1
    metadata:
      name: demo-helm-pod
      namespace: "${ARGOCD_NS}"
      annotations: &basic_annotations
        openshift.io/generated-by: sxcm
      labels: &basic_labels
        app: "helm-app"
        version: "${VERSION}"
        app.startx.fr/scope: "${SCOPE}"
        app.startx.fr/cluster: "${CLUSTER}"
        app.startx.fr/env: "${ENV}"
        app.startx.fr/component: "helm"
        app.kubernetes.io/name: "demo-helm-pod-application"
        app.kubernetes.io/part-of: helm-app
        app.kubernetes.io/version: "${VERSION}"
        app.kubernetes.io/component: "helm"
      finalizers:
        - resources-finalizer.argocd.argoproj.io
    spec:
      destination:
        namespace: demo-helm
        server: 'https://kubernetes.default.svc'
      info:
        - name: teammail
          value: dev@startx.fr
      project: demo-helm
      source:
        path: charts/example-pod/
        repoURL: 'https://github.com/startxfr/helm-repository.git'
        targetRevision: HEAD
        helm:
          valueFiles:
            - values-demo.yaml
          parameters:
            - name: context.scope
              value: "${SCOPE}"
            - name: context.cluster
              value: "${CLUSTER}"
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
  - kind: Application
    apiVersion: argoproj.io/v1alpha1
    metadata:
      name: demo-helm-deployment-apache
      namespace: "${ARGOCD_NS}"
      labels:
        <<: *basic_labels
        app.kubernetes.io/name: "demo-helm-deployment-apache-application"
      annotations:
        <<: *basic_annotations
      finalizers:
        - resources-finalizer.argocd.argoproj.io
    spec:
      destination:
        namespace: demo-helm
        server: 'https://kubernetes.default.svc'
      info:
        - name: teammail
          value: dev@startx.fr
      project: demo-helm
      source:
        path: charts/example-deployment/
        repoURL: 'https://github.com/startxfr/helm-repository.git'
        targetRevision: HEAD
        helm:
          valueFiles:
            - values-demo.yaml
          parameters:
            - name: context.scope
              value: "${SCOPE}"
            - name: context.cluster
              value: "${CLUSTER}"
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
  - kind: Application
    apiVersion: argoproj.io/v1alpha1
    metadata:
      name: demo-helm-deployment-mariadb
      namespace: "${ARGOCD_NS}"
      labels:
        <<: *basic_labels
        app.kubernetes.io/name: "demo-helm-deployment-mariadb-application"
      annotations:
        <<: *basic_annotations
      finalizers:
        - resources-finalizer.argocd.argoproj.io
    spec:
      destination:
        namespace: demo-helm
        server: 'https://kubernetes.default.svc'
      info:
        - name: teammail
          value: dev@startx.fr
      project: demo-helm
      source:
        path: charts/example-deployment/
        repoURL: 'https://github.com/startxfr/helm-repository.git'
        targetRevision: HEAD
        helm:
          valueFiles:
            - values-mariadb.yaml
          parameters:
            - name: context.scope
              value: "${SCOPE}"
            - name: context.cluster
              value: "${CLUSTER}"
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
  - kind: Application
    apiVersion: argoproj.io/v1alpha1
    metadata:
      name: demo-helm-sxapi-dev
      namespace: "${ARGOCD_NS}"
      labels:
        <<: *basic_labels
        app.kubernetes.io/name: "demo-helm-sxapi-dev-application"
      annotations:
        <<: *basic_annotations
      finalizers:
        - resources-finalizer.argocd.argoproj.io
    spec:
      destination:
        namespace: demo-helm
        server: 'https://kubernetes.default.svc'
      info:
        - name: teammail
          value: dev@startx.fr
      project: demo-helm
      source:
        path: charts/example-sxapi/
        repoURL: 'https://github.com/startxfr/helm-repository.git'
        targetRevision: HEAD
        helm:
          valueFiles:
            - values-dev.yaml
          parameters:
            - name: context.scope
              value: "${SCOPE}"
            - name: context.cluster
              value: "${CLUSTER}"
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
  - kind: Application
    apiVersion: argoproj.io/v1alpha1
    metadata:
      name: demo-helm-sxapi-prod
      namespace: "${ARGOCD_NS}"
      labels:
        <<: *basic_labels
        app.kubernetes.io/name: "demo-helm-sxapi-prod-application"
      annotations:
        <<: *basic_annotations
      finalizers:
        - resources-finalizer.argocd.argoproj.io
    spec:
      destination:
        namespace: demo-helm
        server: 'https://kubernetes.default.svc'
      info:
        - name: teammail
          value: dev@startx.fr
      project: demo-helm
      source:
        path: charts/example-sxapi/
        repoURL: 'https://github.com/startxfr/helm-repository.git'
        targetRevision: HEAD
        helm:
          valueFiles:
            - values-v0.0.1.yaml
          parameters:
            - name: context.scope
              value: "${SCOPE}"
            - name: context.cluster
              value: "${CLUSTER}"
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
parameters:
  - name: NS
    displayName: SXAPI namespace for helm instance
    description: "Name of the helm namespace"
    value: demo-helm
    required: true
  - name: ARGOCD_NS
    displayName: The namespace where helm server goes to
    description: "Namespace to place helm server to"
    value: startx-argocd
    required: true
  - name: SCOPE
    displayName: Project scope
    description: "Project scope (ex: sxv4)"
    value: demo
    required: true
  - name: CLUSTER
    displayName: Cluster name
    description: "Name of the current cluster  (ex: sxsf)"
    value: sxsf
    required: true
  - name: ENV
    displayName: Project environment
    description: "Project environment (ex: dev, factory, preprod or prod)"
    value: dev
    required: true
  - name: VERSION
    displayName: Project version
    description: "Project deployed release"
    value: "1.0.0-dev"
    required: true
  - name: COMPONENT
    displayName: Project service
    description: "Project service"
    value: demo
    required: true