kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: sxcm-demo-3scale-project-template
  annotations:
    openshift.io/display-name: Demo STARTX - 3Scale
    openshift.io/documentation-url: https://github.com/startxfr/sxcm/blob/dev/README.md
    openshift.io/support-url: https://github.com/startxfr/sxcm/issues/new
    openshift.io/generated-by: sxcm
    openshift.io/provider-display-name: STARTX
    description:
      Deployment of a 3scale infra and a sample application using this infrastructure to 
      demonstrate the API management capacities of 3Scale solution running under an 
      openshift 4 environment
    iconClass: icon-3scale
    tags: startx,3scale,demo,dev
  labels:
    template: sxcm-demo-3scale-project-template
message: |-
  Your demo project ${NS} for 3scale technology is now created.

  Scope          : ${SCOPE}
  Environment    : ${ENV}
  Service        : 3scale
  Project        : ${NS}

labels:
  template: sxcm-demo-3scale-project-template 
  app.kubernetes.io/managed-by: sxcm
objects:
- kind: AppProject
  apiVersion: argoproj.io/v1alpha1
  metadata:
    name: ${NS}
    namespace: "${ARGOCD_NS}"
    labels:  &basic_labels
      app.startx.fr/scope: "${SCOPE}"
      app.startx.fr/cluster: "${CLUSTER}"
      app.startx.fr/component: "${NS}"
      app.kubernetes.io/name: "${NS}-appproject"
      app.kubernetes.io/part-of: ${NS}
      app.kubernetes.io/version: "${VERSION}"
      app.kubernetes.io/component: "${NS}-project"
    annotations: &basic_annotations
      openshift.io/generated-by: sxcm
  spec:
    sourceRepos:
      - '*'
    destinations:
      - namespace: ${NS}
        server: '*'
    clusterResourceWhitelist:
      - group: '*'
        kind: '*'
    roles:
    - name: dev
      description: Read-only privileges to group dev in ${NS} project
      policies:
      - g, dev, role:readonly
      - p, role:startx-dev, *, get, .${NS}/*, allow
      groups:
      - dev
    - name: ops
      description: Read-only (and sync) privileges to group ops in ${NS} project
      policies:
      - p, role:startx-ops, clusters, get, .${NS}/*, allow
      - p, role:startx-ops, projects, get, .${NS}/*, allow
      - p, role:startx-ops, applications, get, .${NS}/*, allow
      - p, role:startx-ops, applications, sync, .${NS}/*, allow
      - p, role:startx-ops, repositories, get, .${NS}/*, allow
      - p, role:startx-ops, repositories, sync, .${NS}/*, allow
      - p, role:startx-ops, certificates, get, .${NS}/*, allow
      - g, ops, role:startx-ops
      groups:
      - ops
    - name: devops
      description: Read-only privileges to group devops in ${NS} project
      policies:
      - p, role:startx-devops, clusters, get, .${NS}/*, allow
      - p, role:startx-devops, projects, get, .${NS}/*, allow
      - p, role:startx-devops, applications, get, .${NS}/*, allow
      - p, role:startx-devops, repositories, get, .${NS}/*, allow
      - p, role:startx-devops, certificates, get, .${NS}/*, allow
      - g, devops, role:startx-devops
      groups:
      - devops
    - name: admin
      description: All privileges to group admin in ${NS} project
      policies:
      - p, role:startx-admin, *, *, ${NS}/*, allow
      - g, system:cluster-admins, role:admin
      groups:
      - my-oidc-group
      - system:cluster-admins
      - admin
- kind: Application
  apiVersion: argoproj.io/v1alpha1
  metadata:
    name: ${NS}-project
    namespace: "${ARGOCD_NS}"
    labels:
      <<: *basic_labels
      app.kubernetes.io/name: "${NS}-project-application"
    annotations:
      <<: *basic_annotations
    finalizers:
      - resources-finalizer.argocd.argoproj.io
  spec:
    destination:
      namespace: "${NS}"
      server: 'https://kubernetes.default.svc'
    info:
      - name: teammail
        value: dev@startx.fr
    project: ${NS}
    source:
      path: charts/project/
      repoURL: 'https://github.com/startxfr/helm-repository.git'
      targetRevision: devel
      helm:
        valueFiles:
          - values-demo-3scale.yaml
        parameters:
          - name: context.scope
            value: "${SCOPE}"
          - name: context.cluster
            value: "${CLUSTER}"
          - name: context.environment
            value: "${ENV}"
          - name: context.version
            value: "${VERSION}"
          - name: project.requester
            value: "sxcm"
    syncPolicy:
      automated:
        prune: true
        selfHeal: true
      syncOptions:
        - CreateNamespace=false
        - Validate=true
parameters:
  - name: 3SCALE_NS
    displayName: The namespace where 3scale server goes to
    description: "Namespace to place 3scale server to"
    value: startx-3scale
    required: true
  - name: NS
    displayName: The namespace where objects goes to
    description: "Namespace to place objects to"
    value: demo-3scale
    required: true
  - name: ARGOCD_NS
    displayName: The namespace where argocd server goes to
    description: "Namespace to place argocd server to"
    value: startx-argocd
    required: true
  - name: SCOPE
    displayName: Project scope
    description: "Project scope (ex: demo)"
    value: demo
    required: true
  - name: CLUSTER
    displayName: Cluster name
    description: "Name of the current cluster  (ex: sxsf)"
    value: sxsf
    required: true
  - name: ENV
    displayName: Project environment
    description: "Project environment (ex: dev, factory, preprod or prod)"
    value: dev
    required: true
  - name: VERSION
    displayName: Project version
    description: "Project deployed release"
    value: "1.0.0-dev"
    required: true
  - name: COMPONENT
    displayName: Project service
    description: "Project service"
    value: demo
    required: true
  - name: MARKETPLACE_NS
    displayName: The operator marketplace namespace where objects goes to
    description: "operator marketplace namespace to place objects to"
    value: openshift-marketplace
    required: true
  - name: AWS_ZONE
    displayName: AWS zone
    description: AWS availability zone
    value: "eu-west-2"
    required: true
  - name: AWS_ACCESS_ID
    displayName: AWS access ID
    description: AWS Access ID used for accessing AWS ressources
    value: "AKIA3QVVK7346YAAV32Z"
    required: true
  - name: AWS_ACCESS_KEY
    displayName: AWS access Key
    description: AWS Access Key used for accessing AWS ressources
    value: "ZiMhYy1WB3qugYDNadKdaiWs5pnM/+vOnmccgPw"
    required: true
  - name: AWS_SQS_BUS
    displayName: AWS SQS Bus ID
    description: AWS SQS message bus ID for all message endpoints
    value: "791728029433"
    required: true
  - name: AWS_SMTP_ZONE
    displayName: AWS SMTP zone
    description: AWS availability zone for SES service
    value: "eu-west-1"
    required: true
  - name: AWS_SMTP_USER
    displayName: AWS SMTP User
    description: AWS SMTP user
    value: "AKIA3QVVK7346YAAV32Z"
    required: true
  - name: AWS_SMTP_PASSWORD
    displayName: AWS SMTP User password
    description: AWS SMTP password coresponding to the smtp user
    value: "ZiMhYy1WB3qugYDNadKdaiWs5pnM/+vOnmccgPw"
    required: true
  - name: AWS_SMTP_FROM
    displayName: AWS SMTP sender
    description: AWS SMTP email of the sender
    value: "cl@startx.fr"
    required: true
  - name: RHN_USER
    displayName: RHN container access user
    description: Redhat Network access user to the RH container catalog
    required: true
  - name: RHN_PASSWORD
    displayName: RHN container access password
    description: Redhat Network access password to the Rh container catalog
    required: true

