kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: sxcm-demo-storage-ocs-backend-project
  annotations:
    openshift.io/display-name: Demo STARTX - Storage OCS Backends
    openshift.io/documentation-url: https://sxcm.readthedocs.io/en/latest/demo/ocs
    openshift.io/support-url: https://github.com/startxfr/sxcm/issues/new
    openshift.io/generated-by: sxcm
    openshift.io/provider-display-name: STARTX
    description: Deployment of the backended OCS infrastructure to illustrate how to persist data within an hyper-converged openshift 4 environment
    iconClass: icon-nodejs
    tags: startx,nodejs,ocs,storage,sxcm,demo,dev
  labels:
    component: demo
    template: sxcm-demo-storage-ocs-backend-project
message: |-
  Your ocs demo will be soon deployed in project ${SCOPE}-ocs.
  Monitor the deployement for application availability and
  Follow created route to browse running application

  Scope          : ${SCOPE}
  Environment    : ${ENV}
  Project        : ${NS}-ocs

labels:
  template: sxcm-demo-storage-ocs-backend-project
  app.kubernetes.io/managed-by: sxcm
objects:
- kind: AppProject
  apiVersion: argoproj.io/v1alpha1
  metadata:
    name: ${NS}-ocs
    namespace: "${ARGOCD_NS}"
    labels:  &basic_labels
      app.startx.fr/scope: "${SCOPE}"
      app.startx.fr/cluster: "${CLUSTER}"
      app.startx.fr/component: "${NS}-ocs"
      app.kubernetes.io/name: "${NS}-ocs-context-application"
      app.kubernetes.io/part-of: ${NS}-ocs
      app.kubernetes.io/version: "${VERSION}"
      app.kubernetes.io/component: "${NS}-ocs-project"
    annotations: &basic_annotations
      openshift.io/generated-by: sxcm
    finalizers:
      - resources-finalizer.argocd.argoproj.io
  spec:
    sourceRepos:
      - '*'
    destinations:
      - namespace: ${NS}
        server: '*'
      - namespace: ${STORAGE_NS}
        server: '*'
    clusterResourceWhitelist:
      - group: '*'
        kind: '*'
    roles:
    - name: dev
      description: Read-only privileges to group dev in ${NS}-ocs project
      policies:
      - g, dev, role:readonly
      - p, role:startx-dev, *, get, .${NS}/*, allow
      groups:
      - dev
    - name: ops
      description: Read-only (and sync) privileges to group ops in ${NS} project
      policies:
      - p, role:startx-ops, *, get, .${NS}/*, allow
      - p, role:startx-ops, *, sync, .${NS}/*, allow
      - p, role:startx-ops, applications, get, .${STORAGE_NS}/*, allow
      - p, role:startx-ops, repositories, get, .${STORAGE_NS}/*, allow
      - g, ops, role:startx-ops
      groups:
      - ops
    - name: devops
      description: Read-only privileges to group devops in ${NS} project
      policies:
      - p, role:startx-devops, *, get, .${NS}/*, allow
      - p, role:startx-devops, applications, sync, .${NS}/*, allow
      - p, role:startx-devops, repositories, sync, .${NS}/*, allow
      - g, devops, role:startx-devops
      groups:
      - devops
    - name: admin
      description: All privileges to group admin in ${NS} project
      policies:
      - p, role:startx-admin, *, *, ${NS}/*, allow
      - p, role:startx-admin, *, *, ${STORAGE_NS}/*, allow
      - g, system:cluster-admins, role:admin
      groups:
      - my-oidc-group
      - system:cluster-admins
      - admin
- kind: Application
  apiVersion: argoproj.io/v1alpha1
  metadata:
    name: ${NS}-ocs-context
    namespace: "${ARGOCD_NS}"
    labels:  &basic_labels
      app.startx.fr/scope: "${SCOPE}"
      app.startx.fr/cluster: "${CLUSTER}"
      app.startx.fr/component: "${NS}-ocs"
      app.kubernetes.io/name: "${NS}-ocs-context-application"
      app.kubernetes.io/part-of: ${NS}-ocs
      app.kubernetes.io/version: "${VERSION}"
      app.kubernetes.io/component: "${NS}-ocs-project"
    annotations: &basic_annotations
      openshift.io/generated-by: sxcm
    finalizers:
      - resources-finalizer.argocd.argoproj.io
  spec:
    destination:
      namespace: "${STORAGE_NS}"
      server: 'https://kubernetes.default.svc'
    info:
      - name: teammail
        value: dev@startx.fr
    project: "${NS}-ocs"
    source:
      path: charts/example-catalog/
      repoURL: 'https://github.com/startxfr/helm-repository.git'
      targetRevision: master
      helm:
        valueFiles:
          - values-storage_ocs_context.yaml
        parameters:
          - name: context.scope
            value: "${SCOPE}"
          - name: context.cluster
            value: "${CLUSTER}"
          - name: context.environment
            value: "${ENV}"
          - name: context.version
            value: "${VERSION}"
          - name: context.app
            value: "storage_ocs_context"
          - name: demo.storage_ocs_context.namespace
            value: "${NS}"
          - name: demo.storage_ocs_context.namespace_ocs
            value: "${STORAGE_NS}"
          - name: demo.storage_ocs_context.aws_access_id
            value: "${AWS_ACCESS_ID}"
          - name: demo.storage_ocs_context.aws_access_key
            value: "${AWS_ACCESS_KEY}"
          - name: demo.storage_ocs_context.aws_region
            value: "${AWS_ZONE}"
          - name: demo.storage_ocs_context.aws_bucket
            value: "${AWS_BUCKET}"
    syncPolicy:
      automated:
        prune: true
        selfHeal: true
      syncOptions:
        - ApplyOutOfSyncOnly=true
        - CreateNamespace=false
        - Validate=true
      retry:
        limit: 5
        backoff:
          duration: 5s
          factor: 2
          maxDuration: 20s
parameters:
  - name: NS
    displayName: Namespace for this demo instance
    description: "Name of the demo namespace"
    value: demo-storage
    required: true
  - name: STORAGE_NS
    displayName: Namespace for OCS storage applications
    description: "Name of the OCS demo namespace"
    value: openshift-storage
    required: true
  - name: ARGOCD_NS
    displayName: The namespace where argocd server goes to
    description: "Namespace to place argocd server to"
    value: openshift-gitops
    required: true
  - name: SCOPE
    displayName: Project scope
    description: "Project scope (ex: sxv4)"
    value: demo
    required: true
  - name: CLUSTER
    displayName: Cluster name
    description: "Name of the current cluster  (ex: sxsf)"
    value: sxsf
    required: true
  - name: ENV
    displayName: Project environment
    description: "Project environment (ex: dev, factory, preprod or prod)"
    value: dev
    required: true
  - name: VERSION
    displayName: Project version
    description: "Project deployed release"
    value: "1.0.0-dev"
    required: true
  - name: COMPONENT
    displayName: Project service
    description: "Project service"
    value: demo
    required: true
  - name: RANDRUN
    displayName: Random string for job execution
    description: Random string suffix to use for job uniqueness
    from: "[a-z0-9]{10}"
    generate: expression
    required: true
  - name: AWS_ACCESS_ID
    displayName: AWS access ID
    description: AWS Access ID used for accessing AWS ressources
    value: "AKIA3QVVK734RUGRRUZW"
    required: true
  - name: AWS_ACCESS_KEY
    displayName: AWS access Key
    description: AWS Access Key used for accessing AWS ressources
    value: "7Qb1jRd67HcKUf8Zr1xTQWhylV3Jz+1bMIABO7xJ"
    required: true
  - name: AWS_ZONE
    displayName: AWS zone
    description: AWS availability zone
    value: "eu-west-3"
    required: true
