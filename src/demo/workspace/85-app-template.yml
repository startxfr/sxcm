kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: sxcm-demo-che-app-template
  annotations:
    openshift.io/display-name: Demo STARTX - EclipseChe
    openshift.io/documentation-url: https://github.com/startxfr/sxcm/blob/dev/README.md
    openshift.io/support-url: https://github.com/startxfr/sxcm/issues/new
    openshift.io/generated-by: sxcm
    openshift.io/provider-display-name: STARTX
    description:
      Deployment of a EclipseChe infrastructure and a sample application using this infrastructure to 
      demonstrate the Virtual Machine management capacities of EclipseChe solution running under an 
      openshift 4 environment
    iconClass: icon-che
    tags: startx,che,demo,dev
  labels:
    template: sxcm-demo-che-app-template
message: |-
  Your demo application ${NS} for EclipseChe technology is now created.

  Scope          : ${SCOPE}
  Environment    : ${ENV}
  Project        : ${NS}

labels:
  template: sxcm-demo-che-app-template
  app.kubernetes.io/managed-by: sxcm
objects:
- kind: Application
  apiVersion: argoproj.io/v1alpha1
  metadata:
    name: ${NS}-manpage
    namespace: "${ARGOCD_NS}"
    labels:  &basic_labels
      app.startx.fr/scope: "${SCOPE}"
      app.startx.fr/cluster: "${CLUSTER}"
      app.startx.fr/component: "${NS}"
      app.kubernetes.io/name: "${NS}-manpage-application"
      app.kubernetes.io/part-of: ${NS}
      app.kubernetes.io/version: "${VERSION}"
      app.kubernetes.io/component: "${NS}-project"
    annotations: &basic_annotations
      openshift.io/generated-by: sxcm
    finalizers:
      - resources-finalizer.argocd.argoproj.io
  spec:
    destination:
      namespace: "${NS}"
      server: 'https://kubernetes.default.svc'
    info:
      - name: teammail
        value: dev@startx.fr
    project: ${NS}
    source:
      path: charts/example-html/
      repoURL: 'https://github.com/startxfr/helm-repository.git'
      targetRevision: devel
      helm:
        valueFiles:
          - values-demo-che-manpage.yaml
        parameters:
          - name: context.scope
            value: "${SCOPE}"
          - name: context.cluster
            value: "${CLUSTER}"
          - name: context.environment
            value: "${ENV}"
          - name: context.version
            value: "${VERSION}"
          - name: context.app
            value: "manpage"
          - name: html.namespace
            value: "${NS}"
    syncPolicy:
      automated:
        prune: true
        selfHeal: true
      syncOptions:
        - CreateNamespace=false
        - Validate=true
      retry:
        limit: 5
        backoff:
          duration: 5s
          factor: 2
          maxDuration: 20s
- kind: Application
  apiVersion: argoproj.io/v1alpha1
  metadata:
    name: startx-cluster-workspace-instance
    namespace: "${ARGOCD_NS}"
    labels: 
      app.startx.fr/scope: "${SCOPE}"
      app.startx.fr/cluster: "${CLUSTER}"
      app.startx.fr/component: "argocd"
      app.kubernetes.io/name: "startx-cluster-workspace-instance-application"
      app.kubernetes.io/part-of: ${CLUSTER}
      app.kubernetes.io/version: "${VERSION}"
      app.kubernetes.io/component: "argocd"
    annotations:
      openshift.io/generated-by: sxcm
      # argocd.argoproj.io/manifest-generate-paths: .
    finalizers:
      - resources-finalizer.argocd.argoproj.io
  spec:
    destination:
      namespace: "${OPERATOR_NS}"
      server: 'https://kubernetes.default.svc'
    info:
      - name: teammail
        value: dev@startx.fr
    project: cluster-admin
    source:
      path: charts/cluster-workspace/
      repoURL: 'https://github.com/startxfr/helm-repository.git'
      targetRevision: devel
      helm:
        releaseName: startx-workspace-instance
        valueFiles:
          - values-startx.yaml
        parameters:
          - name: context.scope
            value: "${SCOPE}"
          - name: context.cluster
            value: "${CLUSTER}"
          - name: context.environment
            value: "${ENV}"
          - name: context.version
            value: "${VERSION}"
          - name: context.app
            value: "${NS}"
          - name: project.project.name
            value: "${NS}"
          - name: project.enabled
            value: "false"
          - name: operator.enabled
            value: "false"
          - name: cheCluster.enabled
            value: "true"
    syncPolicy:
      automated:
        prune: true
        selfHeal: false
      syncOptions:
        - CreateNamespace=false
        - Validate=true
      retry:
        limit: 3
        backoff:
          duration: 50s
          factor: 2
          maxDuration: 300s
parameters:
  - name: NS
    displayName: demo namespace for che instance
    description: "Name of the che namespace"
    value: demo-che
    required: true
  - name: OPERATOR_NS
    displayName: demo namespace for che operator
    description: "Name of the che operator namespace"
    value: openshift-workspaces
    required: true
  - name: ARGOCD_NS
    displayName: The namespace where argocd server goes to
    description: "Namespace to place argocd server to"
    value: startx-argocd
    required: true
  - name: SCOPE
    displayName: Project scope
    description: "Project scope (ex: sxv4)"
    value: demo
    required: true
  - name: CLUSTER
    displayName: Cluster name
    description: "Name of the current cluster  (ex: sxsf)"
    value: sxsf
    required: true
  - name: ENV
    displayName: Project environment
    description: "Project environment (ex: dev, factory, preprod or prod)"
    value: dev
    required: true
  - name: VERSION
    displayName: Project version
    description: "Project deployed release"
    value: "1.0.0-dev"
    required: true
  - name: COMPONENT
    displayName: Project service
    description: "Project service"
    value: demo
    required: true
  - name: RANDRUN
    displayName: Random string for job execution
    description: Random string suffix to use for job uniqueness
    from: "[a-z0-9]{10}"
    generate: expression
    required: true
