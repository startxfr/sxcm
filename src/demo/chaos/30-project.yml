kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: sxcm-demo-chaos-project
  annotations:
    openshift.io/display-name: Demo STARTX - Chaos
    openshift.io/documentation-url: https://sxcm.readthedocs.io/en/latest/demo/chaos
    openshift.io/support-url: https://github.com/startxfr/sxcm/issues/new
    openshift.io/generated-by: sxcm
    openshift.io/provider-display-name: STARTX
    description:
      Deployment of the chaos environment
    iconClass: icon-load-balancer
    tags: startx,chaos,demo,dev
  labels:
    template: sxcm-demo-chaos-project
message: |-
  Your demo project ${NS} for Chaos test is now created.

  Scope          : ${SCOPE}
  Environment    : ${ENV}
  Service        : chaos
  Project        : ${NS}

labels:
  template: sxcm-demo-chaos-project
  app.kubernetes.io/managed-by: sxcm
objects:
- kind: AppProject
  apiVersion: argoproj.io/v1alpha1
  metadata:
    name: ${NS}
    namespace: "${ARGOCD_NS}"
    labels:  &basic_labels
      app.startx.fr/scope: "${SCOPE}"
      app.startx.fr/cluster: "${CLUSTER}"
      app.startx.fr/component: "${NS}"
      app.kubernetes.io/name: "${NS}-appproject"
      app.kubernetes.io/part-of: ${NS}
      app.kubernetes.io/version: "${VERSION}"
      app.kubernetes.io/component: "${NS}-project"
    annotations: &basic_annotations
      openshift.io/generated-by: sxcm
    finalizers:
      - resources-finalizer.argocd.argoproj.io
  spec:
    sourceRepos:
      - '*'
    destinations:
      - namespace: ${NS}
        server: '*'
    clusterResourceWhitelist:
      - group: '*'
        kind: '*'
    roles:
    - name: dev
      description: Read-only privileges to group dev in ${NS} project
      policies:
      - g, dev, role:readonly
      - p, role:startx-dev, *, get, .${NS}/*, allow
      groups:
      - dev
    - name: ops
      description: Read-only (and sync) privileges to group ops in ${NS} project
      policies:
      - p, role:startx-ops, *, get, .${NS}/*, allow
      - p, role:startx-ops, *, sync, .${NS}/*, allow
      - g, ops, role:startx-ops
      groups:
      - ops
    - name: devops
      description: Read-only privileges to group devops in ${NS} project
      policies:
      - p, role:startx-devops, *, get, .${NS}/*, allow
      - p, role:startx-devops, applications, sync, .${NS}/*, allow
      - p, role:startx-devops, repositories, sync, .${NS}/*, allow
      - g, devops, role:startx-devops
      groups:
      - devops
    - name: admin
      description: All privileges to group admin in ${NS} project
      policies:
      - p, role:startx-admin, *, *, ${NS}/*, allow
      - g, system:cluster-admins, role:admin
      groups:
      - my-oidc-group
      - system:cluster-admins
      - admin
- kind: AppProject
  apiVersion: argoproj.io/v1alpha1
  metadata:
    name: ${NS}-kraken
    namespace: "${ARGOCD_NS}"
    labels:  &basic_labels
      app.startx.fr/scope: "${SCOPE}"
      app.startx.fr/cluster: "${CLUSTER}"
      app.startx.fr/component: "${NS}-kraken"
      app.kubernetes.io/name: "${NS}-kraken-appproject"
      app.kubernetes.io/part-of: ${NS}-kraken
      app.kubernetes.io/version: "${VERSION}"
      app.kubernetes.io/component: "${NS}-kraken-project"
    annotations: &basic_annotations
      openshift.io/generated-by: sxcm
    finalizers:
      - resources-finalizer.argocd.argoproj.io
  spec:
    sourceRepos:
      - '*'
    destinations:
      - namespace: ${NS}-kraken
        server: '*'
    clusterResourceWhitelist:
      - group: '*'
        kind: '*'
    roles:
    - name: dev
      description: Read-only privileges to group dev in ${NS}-kraken project
      policies:
      - g, dev, role:readonly
      - p, role:startx-dev, *, get, .${NS}-kraken/*, allow
      groups:
      - dev
    - name: ops
      description: Read-only (and sync) privileges to group ops in ${NS}-kraken project
      policies:
      - p, role:startx-ops, *, get, .${NS}-kraken/*, allow
      - p, role:startx-ops, *, sync, .${NS}-kraken/*, allow
      - g, ops, role:startx-ops
      groups:
      - ops
    - name: devops
      description: Read-only privileges to group devops in ${NS}-kraken project
      policies:
      - p, role:startx-devops, *, get, .${NS}-kraken/*, allow
      - p, role:startx-devops, applications, sync, .${NS}-kraken/*, allow
      - p, role:startx-devops, repositories, sync, .${NS}-kraken/*, allow
      - g, devops, role:startx-devops
      groups:
      - devops
    - name: admin
      description: All privileges to group admin in ${NS}-kraken project
      policies:
      - p, role:startx-admin, *, *, ${NS}-kraken/*, allow
      - g, system:cluster-admins, role:admin
      groups:
      - my-oidc-group
      - system:cluster-admins
      - admin
- kind: AppProject
  apiVersion: argoproj.io/v1alpha1
  metadata:
    name: ${NS}-mesh
    namespace: "${ARGOCD_NS}"
    labels:  &basic_labels
      app.startx.fr/scope: "${SCOPE}"
      app.startx.fr/cluster: "${CLUSTER}"
      app.startx.fr/component: "${NS}-mesh"
      app.kubernetes.io/name: "${NS}-mesh-appproject"
      app.kubernetes.io/part-of: ${NS}-mesh
      app.kubernetes.io/version: "${VERSION}"
      app.kubernetes.io/component: "${NS}-mesh-project"
    annotations: &basic_annotations
      openshift.io/generated-by: sxcm
    finalizers:
      - resources-finalizer.argocd.argoproj.io
  spec:
    sourceRepos:
      - '*'
    destinations:
      - namespace: ${NS}-mesh
        server: '*'
    clusterResourceWhitelist:
      - group: '*'
        kind: '*'
    roles:
    - name: dev
      description: Read-only privileges to group dev in ${NS}-mesh project
      policies:
      - g, dev, role:readonly
      - p, role:startx-dev, *, get, .${NS}-mesh/*, allow
      groups:
      - dev
    - name: ops
      description: Read-only (and sync) privileges to group ops in ${NS}-mesh project
      policies:
      - p, role:startx-ops, *, get, .${NS}-mesh/*, allow
      - p, role:startx-ops, *, sync, .${NS}-mesh/*, allow
      - g, ops, role:startx-ops
      groups:
      - ops
    - name: devops
      description: Read-only privileges to group devops in ${NS}-mesh project
      policies:
      - p, role:startx-devops, *, get, .${NS}-mesh/*, allow
      - p, role:startx-devops, applications, sync, .${NS}-mesh/*, allow
      - p, role:startx-devops, repositories, sync, .${NS}-mesh/*, allow
      - g, devops, role:startx-devops
      groups:
      - devops
    - name: admin
      description: All privileges to group admin in ${NS}-mesh project
      policies:
      - p, role:startx-admin, *, *, ${NS}-mesh/*, allow
      - g, system:cluster-admins, role:admin
      groups:
      - my-oidc-group
      - system:cluster-admins
      - admin
- kind: Application
  apiVersion: argoproj.io/v1alpha1
  metadata:
    name: ${NS}-project
    namespace: "${ARGOCD_NS}"
    labels:
      <<: *basic_labels
      app.kubernetes.io/name: "${NS}-project-application"
    annotations:
      <<: *basic_annotations
      # argocd.argoproj.io/manifest-generate-paths: .
    finalizers:
      - resources-finalizer.argocd.argoproj.io
  spec:
    destination:
      namespace: "${NS}"
      server: 'https://kubernetes.default.svc'
    info:
      - name: teammail
        value: dev@startx.fr
    project: cluster-admin
    source:
      path: charts/example-chaos/
      repoURL: 'https://github.com/startxfr/helm-repository.git'
      targetRevision: "${HELM_RELEASE}"
      helm:
        valueFiles:
          - values-startx-project.yaml
        parameters:
          - name: context.scope
            value: "${SCOPE}"
          - name: context.cluster
            value: "${CLUSTER}"
          - name: context.environment
            value: "${ENV}"
          - name: context.version
            value: "${VERSION}"
          - name: project.project.requester
            value: "sxcm"
          - name: project.enable
            value: "true"
    syncPolicy:
      automated:
        prune: true
        selfHeal: true
      syncOptions:
        - ApplyOutOfSyncOnly=true
        - CreateNamespace=false
        - Validate=true
      retry:
        limit: 5
        backoff:
          duration: 5s
          factor: 2
          maxDuration: 5m
- kind: Application
  apiVersion: argoproj.io/v1alpha1
  metadata:
    name: ${NS}-kraken-project
    namespace: "${ARGOCD_NS}"
    labels:
      <<: *basic_labels
      app.kubernetes.io/name: "${NS}-kraken-project-application"
    annotations:
      <<: *basic_annotations
      # argocd.argoproj.io/manifest-generate-paths: .
    finalizers:
      - resources-finalizer.argocd.argoproj.io
  spec:
    destination:
      namespace: "${NS}-kraken"
      server: 'https://kubernetes.default.svc'
    info:
      - name: teammail
        value: dev@startx.fr
    project: cluster-admin
    source:
      path: charts/example-chaos/
      repoURL: 'https://github.com/startxfr/helm-repository.git'
      targetRevision: "${HELM_RELEASE}"
      helm:
        valueFiles:
          - values-startx-project-kraken.yaml
        parameters:
          - name: context.scope
            value: "${SCOPE}"
          - name: context.cluster
            value: "${CLUSTER}"
          - name: context.environment
            value: "${ENV}"
          - name: context.version
            value: "${VERSION}"
          - name: kraken_project.project.requester
            value: "sxcm"
          - name: kraken_project.enable
            value: "true"
    syncPolicy:
      automated:
        prune: true
        selfHeal: true
      syncOptions:
        - ApplyOutOfSyncOnly=true
        - CreateNamespace=false
        - Validate=true
      retry:
        limit: 5
        backoff:
          duration: 5s
          factor: 2
          maxDuration: 5m
- kind: Application
  apiVersion: argoproj.io/v1alpha1
  metadata:
    name: ${NS}-mesh-project
    namespace: "${ARGOCD_NS}"
    labels:
      <<: *basic_labels
      app.kubernetes.io/name: "${NS}-mesh-project-application"
    annotations:
      <<: *basic_annotations
      # argocd.argoproj.io/manifest-generate-paths: .
    finalizers:
      - resources-finalizer.argocd.argoproj.io
  spec:
    destination:
      namespace: "${NS}-mesh"
      server: 'https://kubernetes.default.svc'
    info:
      - name: teammail
        value: dev@startx.fr
    project: cluster-admin
    source:
      path: charts/example-chaos/
      repoURL: 'https://github.com/startxfr/helm-repository.git'
      targetRevision: "${HELM_RELEASE}"
      helm:
        valueFiles:
          - values-startx-project-mesh.yaml
        parameters:
          - name: context.scope
            value: "${SCOPE}"
          - name: context.cluster
            value: "${CLUSTER}"
          - name: context.environment
            value: "${ENV}"
          - name: context.version
            value: "${VERSION}"
          - name: mesh_project.project.requester
            value: "sxcm"
          - name: mesh_project.enable
            value: "true"
    syncPolicy:
      automated:
        prune: true
        selfHeal: true
      syncOptions:
        - ApplyOutOfSyncOnly=true
        - CreateNamespace=false
        - Validate=true
      retry:
        limit: 5
        backoff:
          duration: 5s
          factor: 2
          maxDuration: 5m
parameters:
  - name: OPERATOR_NS
    displayName: The namespace where operator goes to
    description: "Namespace to place objects to"
    value: startx-chaos
    required: true
  - name: NS
    displayName: The namespace where objects goes to
    description: "Namespace to place objects to"
    value: startx-chaos
    required: true
  - name: ARGOCD_NS
    displayName: The namespace where argocd server goes to
    description: "Namespace to place argocd server to"
    value: openshift-gitops
    required: true
  - name: SCOPE
    displayName: Project scope
    description: "Project scope (ex: sxv4)"
    value: demo
    required: true
  - name: CLUSTER
    displayName: Cluster name
    description: "Name of the current cluster  (ex: sxsf)"
    value: sxsf
    required: true
  - name: ENV
    displayName: Project environment
    description: "Project environment (ex: dev, factory, preprod or prod)"
    value: dev
    required: true
  - name: HELM_RELEASE
    displayName: Helm repository release
    description: "Branch or release name for the helm repository holding all charts"
    value: devel
  - name: VERSION
    displayName: Project version
    description: "Project deployed release"
    value: "1.0.0-dev"
    required: true
  - name: COMPONENT
    displayName: Project service
    description: "Project service"
    value: demo
    required: true
