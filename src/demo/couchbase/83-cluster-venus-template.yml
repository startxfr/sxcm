kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: sxcm-demo-couchbase-cluster-venus-template
  annotations:
    openshift.io/display-name: "Demo couchbase : Deploy operator and cluster"
    openshift.io/documentation-url: https://sxcm.readthedocs.io/en/latest/demo/couchbase
    openshift.io/support-url: https://github.com/startxfr/sxcm/issues/new
    openshift.io/generated-by: sxcm
    openshift.io/provider-display-name: STARTX
    description:
      Template deploying required ressource to run a sample demonstration on how to use couchbase
      to run a simple standalone task.
    iconClass: icon-nodejs
    tags: startx,nodejs,sxapi,sxcm,demo,dev
  labels:
    template: sxcm-demo-couchbase-cluster-venus-template
message: |-
  Your couchbase demo 1 ressources are now created.

  Scope          : ${SCOPE}
  Environment    : ${ENV}

labels:
  template: sxcm-demo-couchbase-cluster-venus-template
  app.kubernetes.io/managed-by: sxcm
objects:
  - kind: Application
    apiVersion: argoproj.io/v1alpha1
    metadata:
      name: ${NS}-cluster-venus
      namespace: "${ARGOCD_NS}"
      labels:  &basic_labels
        app.startx.fr/scope: "${SCOPE}"
        app.startx.fr/cluster: "${CLUSTER}"
        app.startx.fr/component: "${NS}"
        app.kubernetes.io/name: "${NS}-operator-application"
        app.kubernetes.io/part-of: ${NS}
        app.kubernetes.io/version: "${VERSION}"
        app.kubernetes.io/component: "${NS}-project"
      annotations: &basic_annotations
        openshift.io/generated-by: sxcm
      finalizers:
        - resources-finalizer.argocd.argoproj.io
    spec:
      destination:
        namespace: "${NS}"
        server: 'https://kubernetes.default.svc'
      info:
        - name: teammail
          value: dev@startx.fr
      project: ${NS}
      source:
        path: charts/cluster-couchbase/
        repoURL: 'https://github.com/startxfr/helm-repository.git'
        targetRevision: devel
        helm:
          valueFiles:
            - values-demo.yaml
            - values-demo-venus.yaml
          parameters:
            - name: context.scope
              value: "${SCOPE}"
            - name: context.cluster
              value: "${CLUSTER}"
            - name: context.environment
              value: "${ENV}"
            - name: context.version
              value: "${VERSION}"
            - name: context.app
              value: "${NS}"
            - name: project.enabled
              value: "false"
            - name: operator.enabled
              value: "false"
            - name: couchbaseConfig.enabled
              value: "false"
            - name: cluster.enabled
              value: "true"
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=false
          - Validate=true
        retry:
          limit: 3
          backoff:
            duration: 90s
            factor: 1
            maxDuration: 300s
  - kind: Secret
    apiVersion: v1
    metadata:
      name: "venus-auth"
      namespace: "${NS}"
      labels:
        <<: *basic_labels
        app.kubernetes.io/name: "venus-auth-secret"
        app: couchbase
        couchbase_cluster: venus
      annotations:
        <<: *basic_annotations
    stringData:
      admin: "${COUCHBASE_USER}:${COUCHBASE_PASSWORD}"
      username: "${COUCHBASE_USER}"
      password: "${COUCHBASE_PASSWORD}"
      users: "${COUCHBASE_USER}:${COUCHBASE_PASSWORD}"
parameters:
  - name: NS
    displayName: The namespace where objects goes to
    description: "Namespace to place objects to"
    value: demo-couchbase
  - name: ARGOCD_NS
    displayName: The namespace where argocd server goes to
    description: "Namespace to place argocd server to"
    value: startx-argocd
    required: true
  - name: SCOPE
    displayName: Project scope
    description: "Project scope (ex: demo)"
    value: demo
  - name: CLUSTER
    displayName: Cluster name
    description: "Name of the current cluster  (ex: sxsf)"
    value: sxsf
    required: true
  - name: ENV
    displayName: Project environment
    description: "Project environment (ex: dev, factory, preprod or prod)"
    value: dev
    required: true
  - name: VERSION
    displayName: Project version
    description: "Project deployed release"
    value: "1.0.0-dev"
    required: true
  - name: COMPONENT
    displayName: Project service
    description: "Project service"
    value: couchbase
    required: true
  - name: RANDRUN
    displayName: Random string for pipelinerun execution
    description: Random string suffix to use for pipelinerun task uniqueness
    from: "[a-z0-9]{10}"
    generate: expression
    required: true
  - name: COUCHBASE_USER
    displayName: Couchbase application user
    description: Database user to create
    value: admin
    required: true
  - name: COUCHBASE_PASSWORD
    displayName: Couchbase password
    description: Database password of the application user
    value: "admin"
    required: true
  - name: COUCHBASE_BUCKET
    displayName: Couchbase bucket
    description: name of the bucket to create for example
    value: demo1
    required: true
  - name: COUCHBASE_BUCKET_TYPE
    displayName: Couchbase bucket type
    description: Bucket type for the couchabse bucket (ephemeral, couchbase or memcache)
    value: ephemeral
    required: true
